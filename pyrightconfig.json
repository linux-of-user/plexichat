{
  "include": [
    "src",
    "tests",
    "."
  ],
  "exclude": [
    "**/__pycache__",
    "build",
    "dist",
    "venv",
    "**/*.pyc"
  ],
  "extraPaths": [
    "src"
  ],
  "pythonVersion": "3.11",
  "pythonPlatform": "All",
  "typeCheckingMode": "basic",
  "useLibraryCodeForTypes": true,
  "reportMissingImports": "warning",
  "reportMissingTypeStubs": false,
  "reportUnusedImport": "warning",
  "reportUnusedClass": "warning",
  "reportUnusedFunction": "warning",
  "reportUnusedVariable": "warning",
  "reportDuplicateImport": "warning",
  "reportOptionalSubscript": "warning",
  "reportOptionalMemberAccess": "warning",
  "reportOptionalCall": "warning",
  "reportOptionalIterable": "warning",
  "reportOptionalContextManager": "warning",
  "reportOptionalOperand": "warning",
  "reportTypedDictNotRequiredAccess": false,
  "reportPrivateImportUsage": false,
  "reportConstantRedefinition": "warning",
  "reportIncompatibleMethodOverride": "warning",
  "reportIncompatibleVariableOverride": "warning",
  "reportInconsistentConstructor": "warning",
  "reportOverlappingOverloads": "warning",
  "reportMissingSuperCall": false,
  "reportUninitializedInstanceVariable": false,
  "reportInvalidStringEscapeSequence": "warning",
  "reportUnknownParameterType": false,
  "reportUnknownArgumentType": false,
  "reportUnknownLambdaType": false,
  "reportUnknownVariableType": false,
  "reportUnknownMemberType": false,
  "reportMissingParameterType": false,
  "reportMissingTypeArgument": false,
  "reportInvalidTypeVarUse": "warning",
  "reportCallInDefaultInitializer": false,
  "reportUnnecessaryIsInstance": false,
  "reportUnnecessaryCast": false,
  "reportUnnecessaryComparison": false,
  "reportAssertAlwaysTrue": "warning",
  "reportSelfClsParameterName": "warning",
  "reportImplicitStringConcatenation": false,
  "reportUndefinedVariable": "error",
  "reportUnboundVariable": "error",
  "reportInvalidStubStatement": "warning",
  "reportIncompleteStub": "warning",
  "reportUnsupportedDunderAll": "warning",
  "reportUnusedCoroutine": "warning"
}
