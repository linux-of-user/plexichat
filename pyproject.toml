[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "plexichat"
version = "1.1.17"
description = "Government-Level Secure Communication Platform"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "PlexiChat Team", email = "team@plexichat.local"}
]
maintainers = [
    {name = "PlexiChat Team", email = "team@plexichat.local"}
]
keywords = [
    "communication", "security", "government", "encryption", 
    "backup", "clustering", "ai", "quantum-resistant"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Communications",
    "Topic :: Security",
    "Topic :: System :: Networking",
]
requires-python = ">=3.8"
dependencies = [
    # Core Web Framework
    "fastapi==0.115.12",
    "uvicorn[standard]==0.31.0",
    "starlette==0.41.2",
    
    # Database & ORM
    "sqlmodel==0.0.24",
    "sqlalchemy==2.0.31",
    "psycopg2-binary==2.9.10",
    "aiosqlite==0.19.0",
    "asyncpg==0.29.0",
    "alembic==1.12.0",
    "pymysql==1.1.0",
    
    # Authentication & Security
    "python-jose[cryptography]==3.3.0",
    "passlib[bcrypt]==1.7.4",
    "cryptography==42.0.5",
    "bleach==6.1.0",
    "python-magic==0.4.27",
    
    # HTTP & Networking
    "requests==2.32.3",
    "aiohttp==3.9.1",
    "httpx==0.25.0",
    "websockets==12.0",
    "aiofiles==24.1.0",
    "python-multipart==0.0.9",
    "dnspython==2.4.2",
    
    # Rate Limiting & Caching
    "slowapi==0.1.8",
    "redis==5.0.8",
    "aioredis==2.0.1",
    
    # Configuration & Environment
    "python-dotenv==1.0.1",
    "pyyaml==6.0.1",
    "pydantic[email]==2.5.3",
    "pydantic-settings==2.1.0",
    
    # Scheduling & Background Tasks
    "apscheduler==3.10.4",
    
    # CLI & Terminal UI
    "typer[all]==0.9.0",
    "click==8.1.0",
    "rich==13.7.1",
    "textual==0.85.2",
    "colorama==0.4.6",
    "tabulate==0.9.0",
    
    # File Processing & Utilities
    "watchdog==4.0.2",
    "shortuuid==1.0.11",
    "python-dateutil==2.8.2",
    "humanize==4.8.0",
    "orjson==3.9.10",
    
    # System Monitoring
    "psutil==5.9.8",
    "geoip2==4.8.0",
    
    # Template Engine
    "jinja2==3.1.2",
    
    # Logging & Monitoring
    "structlog==23.2.0",
    "prometheus-client==0.19.0",
    
    # Email & Notifications
    "aiosmtplib==3.0.1",
    
    # Document Generation & QR Codes
    "qrcode[pil]==7.4.2",
    "reportlab==4.0.7",
    
    # Markdown Processing
    "markdown==3.5.1",
]

[project.optional-dependencies]
# Quantum-Resistant Cryptography (Linux/macOS only)
quantum = [
    "pycryptodome==3.19.0",
    "argon2-cffi==23.1.0",
    # Note: Advanced quantum libraries require Linux/macOS
    # "pqcrypto==0.1.0; sys_platform != 'win32'",
    # "liboqs-python==0.10.0; sys_platform != 'win32'",
]

# GUI Desktop Application
gui = [
    "customtkinter>=5.2.0",
    "pillow==10.4.0",
]

# Cloud Storage & Deployment
cloud = [
    "docker==6.1.3",
    "kubernetes==28.1.0",
    "python-consul==1.1.0",
    "boto3==1.34.0",
    "azure-storage-blob==12.19.0",
    "google-cloud-storage==2.10.0",
]

# Data Analysis & Visualization
analytics = [
    "pandas==2.1.4",
    "numpy==1.25.2",
    "scikit-learn==1.3.2",
    "matplotlib==3.8.2",
    "seaborn==0.13.0",
]

# Development Tools
dev = [
    "pytest==7.4.3",
    "pytest-asyncio==0.21.1",
    "pytest-cov==4.1.0",
    "black==23.0.0",
    "flake8==6.0.0",
    "mypy==1.5.0",
    "isort==5.12.0",
]

# Production Server
production = [
    "gunicorn==21.2.0",
]

# Platform-specific
windows = [
    "pywin32==306; sys_platform == 'win32'",
    "wmi==1.5.1; sys_platform == 'win32'",
]

linux = [
    "python-systemd==235; sys_platform == 'linux'",
]

# All optional dependencies
all = [
    "plexichat[quantum,gui,cloud,analytics,dev,production,windows,linux]",
]

[project.urls]
Homepage = "https://github.com/linux-of-user/plexichat"
Documentation = "https://github.com/linux-of-user/plexichat/docs"
Repository = "https://github.com/linux-of-user/plexichat.git"
Issues = "https://github.com/linux-of-user/plexichat/issues"

[project.scripts]
plexichat = "plexichat.interfaces.cli.core.cli_manager:main"
plexichat-server = "plexichat.main:main"
plexichat-gui = "plexichat.interfaces.gui.main:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
plexichat = ["static/**/*", "templates/**/*", "config/**/*"]

# Black configuration
[tool.black]
line-length = 100
target-version = ['py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# MyPy configuration
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests",
    "slow: Slow tests",
    "security: Security tests",
    "performance: Performance tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["src/plexichat"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
