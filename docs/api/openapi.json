{
  "openapi": "3.0.3",
  "info": {
    "title": "PlexiChat API",
    "description": "Comprehensive API for PlexiChat communication platform with real-time messaging, AI integration, and plugin ecosystem",
    "version": "2.0.0",
    "contact": {
      "name": "PlexiChat API Support",
      "email": "api@plexichat.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "https://api.plexichat.com/v1",
      "description": "Production server"
    },
    {
      "url": "https://staging-api.plexichat.com/v1",
      "description": "Staging server"
    },
    {
      "url": "http://localhost:8000/v1",
      "description": "Development server"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    },
    {
      "apiKeyAuth": []
    }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "summary": "User authentication",
        "description": "Authenticate user with credentials or OAuth",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authentication successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "summary": "User logout",
        "description": "Invalidate user session",
        "tags": ["Authentication"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Logout successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "List users",
        "description": "Get paginated list of users",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 1
            },
            "description": "Page number"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 20,
              "maximum": 100
            },
            "description": "Items per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Users retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create user",
        "description": "Create a new user account",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "summary": "Get user details",
        "description": "Get detailed information about a specific user",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "User details retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update user",
        "description": "Update user information",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User identifier"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete user",
        "description": "Delete a user account",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User identifier"
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted successfully"
          }
        }
      }
    },
    "/channels": {
      "get": {
        "summary": "List channels",
        "description": "Get paginated list of channels",
        "tags": ["Channels"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["public", "private", "direct"]
            },
            "description": "Channel type filter"
          }
        ],
        "responses": {
          "200": {
            "description": "Channels retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelsResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create channel",
        "description": "Create a new channel",
        "tags": ["Channels"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateChannelRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Channel created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChannelResponse"
                }
              }
            }
          }
        }
      }
    },
    "/messages": {
      "get": {
        "summary": "List messages",
        "description": "Get messages from a channel or direct conversation",
        "tags": ["Messages"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Channel identifier"
          },
          {
            "name": "before",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Get messages before this timestamp"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "default": 50,
              "maximum": 100
            },
            "description": "Maximum number of messages to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "Messages retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessagesResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Send message",
        "description": "Send a new message to a channel or direct conversation",
        "tags": ["Messages"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendMessageRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Message sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ai/chat": {
      "post": {
        "summary": "AI Chat Completion",
        "description": "Generate AI-powered chat responses",
        "tags": ["AI"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AIChatRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "AI response generated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AIChatResponse"
                }
              }
            }
          }
        }
      }
    },
    "/plugins": {
      "get": {
        "summary": "List plugins",
        "description": "Get list of available plugins",
        "tags": ["Plugins"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Plugins retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PluginsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/backup/shards": {
      "get": {
        "summary": "List backup shards",
        "description": "Get information about backup shards",
        "tags": ["Backup"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Backup shards retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BackupShardsResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create backup shard",
        "description": "Create a new backup shard",
        "tags": ["Backup"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateShardRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Backup shard created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShardResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "apiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key"
      }
    },
    "schemas": {
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "details": {
                "type": "object"
              }
            }
          }
        }
      },
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["username", "password"],
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "remember_me": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "token_type": {
            "type": "string",
            "example": "bearer"
          },
          "expires_in": {
            "type": "integer"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "avatar_url": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["online", "away", "offline"]
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "UsersResponse": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      },
      "CreateUserRequest": {
        "type": "object",
        "required": ["username", "email", "password"],
        "properties": {
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "display_name": {
            "type": "string"
          }
        }
      },
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "display_name": {
            "type": "string"
          },
          "avatar_url": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": ["online", "away", "offline"]
          }
        }
      },
      "Channel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": ["public", "private", "direct"]
          },
          "description": {
            "type": "string"
          },
          "member_count": {
            "type": "integer"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ChannelsResponse": {
        "type": "object",
        "properties": {
          "channels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Channel"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        }
      },
      "ChannelResponse": {
        "type": "object",
        "properties": {
          "channel": {
            "$ref": "#/components/schemas/Channel"
          }
        }
      },
      "CreateChannelRequest": {
        "type": "object",
        "required": ["name", "type"],
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": ["public", "private", "direct"]
          },
          "description": {
            "type": "string"
          },
          "member_ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Message": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "channel_id": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "message_type": {
            "type": "string",
            "enum": ["text", "file", "image", "system"]
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "edited": {
            "type": "boolean"
          },
          "reactions": {
            "type": "object"
          }
        }
      },
      "MessagesResponse": {
        "type": "object",
        "properties": {
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Message"
            }
          },
          "pagination": {
            "$ref": "#/components/schemas/Pagination"
          }
        }
      },
      "MessageResponse": {
        "type": "object",
        "properties": {
          "message": {
            "$ref": "#/components/schemas/Message"
          }
        }
      },
      "SendMessageRequest": {
        "type": "object",
        "required": ["channel_id", "content"],
        "properties": {
          "channel_id": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "message_type": {
            "type": "string",
            "enum": ["text", "file", "image"],
            "default": "text"
          },
          "reply_to": {
            "type": "string"
          }
        }
      },
      "AIChatRequest": {
        "type": "object",
        "required": ["messages"],
        "properties": {
          "messages": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "role": {
                  "type": "string",
                  "enum": ["user", "assistant", "system"]
                },
                "content": {
                  "type": "string"
                }
              }
            }
          },
          "model": {
            "type": "string",
            "default": "gpt-3.5-turbo"
          },
          "temperature": {
            "type": "number",
            "minimum": 0,
            "maximum": 2,
            "default": 0.7
          },
          "max_tokens": {
            "type": "integer",
            "default": 1000
          }
        }
      },
      "AIChatResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "string"
          },
          "model": {
            "type": "string"
          },
          "usage": {
            "type": "object",
            "properties": {
              "prompt_tokens": {
                "type": "integer"
              },
              "completion_tokens": {
                "type": "integer"
              },
              "total_tokens": {
                "type": "integer"
              }
            }
          }
        }
      },
      "PluginsResponse": {
        "type": "object",
        "properties": {
          "plugins": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "version": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "author": {
                  "type": "string"
                },
                "enabled": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "BackupShardsResponse": {
        "type": "object",
        "properties": {
          "shards": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "size": {
                  "type": "integer"
                },
                "status": {
                  "type": "string",
                  "enum": ["active", "archived", "corrupted"]
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time"
                },
                "locations": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "CreateShardRequest": {
        "type": "object",
        "required": ["data", "size"],
        "properties": {
          "data": {
            "type": "string",
            "description": "Base64 encoded data"
          },
          "size": {
            "type": "integer",
            "description": "Shard size in bytes"
          },
          "metadata": {
            "type": "object"
          }
        }
      },
      "ShardResponse": {
        "type": "object",
        "properties": {
          "shard": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "size": {
                "type": "integer"
              },
              "status": {
                "type": "string"
              },
              "locations": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "Pagination": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer"
          },
          "limit": {
            "type": "integer"
          },
          "total": {
            "type": "integer"
          },
          "pages": {
            "type": "integer"
          },
          "has_next": {
            "type": "boolean"
          },
          "has_prev": {
            "type": "boolean"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Authentication",
      "description": "User authentication and authorization"
    },
    {
      "name": "Users",
      "description": "User management operations"
    },
    {
      "name": "Channels",
      "description": "Channel management operations"
    },
    {
      "name": "Messages",
      "description": "Message operations"
    },
    {
      "name": "AI",
      "description": "AI-powered features"
    },
    {
      "name": "Plugins",
      "description": "Plugin management"
    },
    {
      "name": "Backup",
      "description": "Backup and recovery operations"
    }
  ]
}